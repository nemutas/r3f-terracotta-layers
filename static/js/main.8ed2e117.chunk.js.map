{"version":3,"sources":["components/LinkIconButton.tsx","components/three/NoisePlanes.tsx","modules/glsl.ts","components/three/TCanvas.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinkIconButton","props","positionStyle","imagePath","linkPath","position","size","useState","hover","setHover","publicImagePath","process","styles","topLeft","topRight","bottomLeft","bottomRight","style","href","target","rel","onMouseEnter","onMouseLeave","hoverStyles","img","src","alt","width","height","temp","fontSize","top","left","right","bottom","objectFit","opacity","transform","transition","NoisePlanes","posZ","color","NoisePlane","shader","uniforms","u_time","value","u_color","u_scale","u_shadowScale","vertexShader","fragmentShader","useFrame","args","transparent","side","THREE","TCanvas","camera","fov","aspect","window","innerWidth","innerHeight","near","far","dpr","devicePixelRatio","attach","OrbitControls","enablePan","minPolarAngle","Math","PI","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","Stats","App","className","container","css","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ed2e117.chunk.js","sourcesContent":["import React, { useState, VFC } from 'react';\r\n\r\ntype LinkIconButtonProps = {\r\n\t/**\r\n\t * Resource path directly under the public folder.\r\n\t * @example '/assets/icons/github.svg'\r\n\t */\r\n\timagePath: string\r\n\t/**\r\n\t * @example 'https://github.com'\r\n\t */\r\n\tlinkPath: string\r\n\t/**\r\n\t * @default 'bottom-right'\r\n\t */\r\n\tposition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\r\n\t/**\r\n\t * @default [50, 50] - width:50px, height:50px\r\n\t */\r\n\tsize?: [number, number]\r\n}\r\n\r\nexport const LinkIconButton: VFC<LinkIconButtonProps> = props => {\r\n\tconst { imagePath, linkPath, position = 'bottom-right', size = [50, 50] } = props\r\n\tconst [hover, setHover] = useState(false)\r\n\r\n\tconst publicImagePath = process.env.PUBLIC_URL + imagePath\r\n\r\n\tlet positionStyle\r\n\tswitch (position) {\r\n\t\tcase 'top-left':\r\n\t\t\tpositionStyle = styles.topLeft\r\n\t\t\tbreak\r\n\t\tcase 'top-right':\r\n\t\t\tpositionStyle = styles.topRight\r\n\t\t\tbreak\r\n\t\tcase 'bottom-left':\r\n\t\t\tpositionStyle = styles.bottomLeft\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tpositionStyle = styles.bottomRight\r\n\t}\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\tstyle={positionStyle}\r\n\t\t\thref={linkPath}\r\n\t\t\ttarget=\"_blank\"\r\n\t\t\trel=\"noreferrer noopener\"\r\n\t\t\tonMouseEnter={() => setHover(true)}\r\n\t\t\tonMouseLeave={() => setHover(false)}>\r\n\t\t\t<img style={hover ? hoverStyles.img : styles.img} src={publicImagePath} alt=\"\" width={size[0]} height={size[1]} />\r\n\t\t</a>\r\n\t)\r\n}\r\n\r\n// ========================================================\r\n// styles\r\n\r\ntype Styles = { [key in string]: React.CSSProperties }\r\n\r\nconst temp: Styles = {\r\n\tcontainer: {\r\n\t\tposition: 'absolute',\r\n\t\tfontSize: '0'\r\n\t}\r\n}\r\n\r\nconst styles: Styles = {\r\n\ttopLeft: {\r\n\t\t...temp.container,\r\n\t\ttop: '10px',\r\n\t\tleft: '10px'\r\n\t},\r\n\ttopRight: {\r\n\t\t...temp.container,\r\n\t\ttop: '10px',\r\n\t\tright: '10px'\r\n\t},\r\n\tbottomLeft: {\r\n\t\t...temp.container,\r\n\t\tbottom: '10px',\r\n\t\tleft: '10px'\r\n\t},\r\n\tbottomRight: {\r\n\t\t...temp.container,\r\n\t\tbottom: '10px',\r\n\t\tright: '10px'\r\n\t},\r\n\timg: {\r\n\t\tobjectFit: 'cover',\r\n\t\topacity: '0.5',\r\n\t\ttransform: 'rotate(0deg)',\r\n\t\ttransition: 'all 0.3s'\r\n\t}\r\n}\r\n\r\nconst hoverStyles: Styles = {\r\n\timg: {\r\n\t\t...styles.img,\r\n\t\topacity: '1',\r\n\t\ttransform: 'rotate(360deg)'\r\n\t}\r\n}\r\n","import { VFC } from 'react';\r\nimport * as THREE from 'three';\r\nimport { Plane } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { cnoise31 } from '../../modules/glsl';\r\n\r\nexport const NoisePlanes: VFC = () => {\r\n\treturn (\r\n\t\t<group>\r\n\t\t\t<NoisePlane posZ={0.0} color={[0.62, 0.49, 0.45]} />\r\n\t\t\t<NoisePlane posZ={0.1} color={[0.91, 0.8, 0.59]} />\r\n\t\t\t<NoisePlane posZ={0.2} color={[0.54, 0.76, 0.75]} />\r\n\t\t\t<NoisePlane posZ={0.3} color={[0.61, 0.5, 0.47]} />\r\n\t\t\t<NoisePlane posZ={0.4} color={[0.84, 0.56, 0.47]} />\r\n\t\t\t<NoisePlane posZ={0.5} color={[0.91, 0.85, 0.69]} />\r\n\t\t\t<NoisePlane posZ={0.6} color={[0.88, 0.64, 0.49]} />\r\n\t\t\t<NoisePlane posZ={0.7} color={[0.6, 0.49, 0.46]} />\r\n\t\t\t<NoisePlane posZ={0.8} color={[0.91, 0.91, 0.85]} />\r\n\t\t\t<NoisePlane posZ={0.9} color={[0.9, 0.69, 0.49]} />\r\n\t\t\t<NoisePlane posZ={1.0} color={[0.84, 0.56, 0.47]} />\r\n\t\t</group>\r\n\t)\r\n}\r\n\r\ntype NoisePlaneProps = {\r\n\tposZ: number\r\n\tcolor: [number, number, number]\r\n}\r\n\r\nconst NoisePlane: VFC<NoisePlaneProps> = ({ posZ, color }) => {\r\n\tconst shader: THREE.Shader = {\r\n\t\tuniforms: {\r\n\t\t\tu_time: { value: 0 },\r\n\t\t\tu_color: { value: color },\r\n\t\t\tu_scale: { value: 1.0 - posZ },\r\n\t\t\tu_shadowScale: { value: 1.0 - (posZ + 0.1) }\r\n\t\t},\r\n\t\tvertexShader: vertexShader,\r\n\t\tfragmentShader: fragmentShader\r\n\t}\r\n\r\n\tuseFrame(() => {\r\n\t\tshader.uniforms.u_time.value += 0.01\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Plane args={[3, 3]} position={[0, 0, posZ]}>\r\n\t\t\t<shaderMaterial args={[shader]} transparent side={THREE.DoubleSide} />\r\n\t\t</Plane>\r\n\t)\r\n}\r\n\r\n// ========================================================\r\n// shader\r\n\r\nconst vertexShader = `\r\nvarying vec2 v_uv;\r\nvarying vec3 v_eye;\r\n\r\nvoid main() {\r\n  v_uv = uv;\r\n  v_eye = normalize(-cameraPosition);\r\n\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}\r\n`\r\n\r\nconst fragmentShader = `\r\nuniform float u_time;\r\nuniform vec3 u_color;\r\nuniform float u_scale;\r\nuniform float u_shadowScale;\r\nvarying vec2 v_uv;\r\nvarying vec3 v_eye;\r\n\r\n${cnoise31}\r\n\r\nfloat _smoothstep(float value, float offset) {\r\n  float start = -0.3;\r\n  float _offset = pow(offset, 0.8);\r\n  return 1.0 - smoothstep(start + _offset, start + 0.001 + _offset, value);\r\n}\r\n\r\nvoid main() {\r\n  vec3 seed = vec3(v_uv.x, v_uv.y, 1.0);\r\n  seed *= vec3(4.0, 4.0, 1.0);\r\n  seed += u_time * 0.2;\r\n  float noise = cnoise31(seed);\r\n  float alpha = _smoothstep(noise, u_scale);\r\n\r\n  vec3 color = u_color;\r\n  if(0.0 <= u_shadowScale) {\r\n    noise = cnoise31(seed + v_eye * vec3(0.3, 0.3, 0.0));\r\n    float shadow = _smoothstep(noise, u_shadowScale);\r\n    color -= shadow * 0.5;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, alpha);\r\n}\r\n`\r\n","export const cnoise31 = `\r\n//\tClassic Perlin 3D Noise \r\n//\tby Stefan Gustavson\r\n//\r\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\r\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\r\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\r\n\r\nfloat cnoise31(vec3 P){\r\n  vec3 Pi0 = floor(P); // Integer part for indexing\r\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\r\n  Pi0 = mod(Pi0, 289.0);\r\n  Pi1 = mod(Pi1, 289.0);\r\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\r\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\r\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n  vec4 iz0 = Pi0.zzzz;\r\n  vec4 iz1 = Pi1.zzzz;\r\n\r\n  vec4 ixy = permute(permute(ix) + iy);\r\n  vec4 ixy0 = permute(ixy + iz0);\r\n  vec4 ixy1 = permute(ixy + iz1);\r\n\r\n  vec4 gx0 = ixy0 / 7.0;\r\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\r\n  gx0 = fract(gx0);\r\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n  vec4 sz0 = step(gz0, vec4(0.0));\r\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n\r\n  vec4 gx1 = ixy1 / 7.0;\r\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\r\n  gx1 = fract(gx1);\r\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n  vec4 sz1 = step(gz1, vec4(0.0));\r\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n\r\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\r\n\r\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n  g000 *= norm0.x;\r\n  g010 *= norm0.y;\r\n  g100 *= norm0.z;\r\n  g110 *= norm0.w;\r\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n  g001 *= norm1.x;\r\n  g011 *= norm1.y;\r\n  g101 *= norm1.z;\r\n  g111 *= norm1.w;\r\n\r\n  float n000 = dot(g000, Pf0);\r\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n  float n111 = dot(g111, Pf1);\r\n\r\n  vec3 fade_xyz = fade(Pf0);\r\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \r\n  return 2.2 * n_xyz;\r\n}\r\n`\r\n","import React, { VFC } from 'react';\nimport { OrbitControls, Stats } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport { NoisePlanes } from './NoisePlanes';\n\nexport const TCanvas: VFC = () => {\n\treturn (\n\t\t<Canvas\n\t\t\tcamera={{\n\t\t\t\tposition: [0, 0, 5],\n\t\t\t\tfov: 50,\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\n\t\t\t\tnear: 0.1,\n\t\t\t\tfar: 2000\n\t\t\t}}\n\t\t\tdpr={window.devicePixelRatio}>\n\t\t\t{/* scene */}\n\t\t\t<color attach=\"background\" args={['#987452']} />\n\t\t\t{/* camera controller */}\n\t\t\t<OrbitControls\n\t\t\t\tattach=\"orbitControls\"\n\t\t\t\tenablePan={false}\n\t\t\t\tminPolarAngle={0.5 * Math.PI - Math.PI / 6}\n\t\t\t\tmaxPolarAngle={0.5 * Math.PI + Math.PI / 6}\n\t\t\t\tminAzimuthAngle={2 * Math.PI - Math.PI / 6}\n\t\t\t\tmaxAzimuthAngle={2 * Math.PI + Math.PI / 6}\n\t\t\t/>\n\t\t\t{/* objects */}\n\t\t\t<NoisePlanes />\n\t\t\t{/* helper */}\n\t\t\t<Stats />\n\t\t</Canvas>\n\t)\n}\n","import React, { VFC } from 'react';\nimport { css } from '@emotion/css';\nimport { LinkIconButton } from './LinkIconButton';\nimport { TCanvas } from './three/TCanvas';\n\nexport const App: VFC = () => {\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<TCanvas />\n\t\t\t<LinkIconButton\n\t\t\t\timagePath=\"/assets/icons/github.svg\"\n\t\t\t\tlinkPath=\"https://github.com/nemutas/r3f-terracotta-layers\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nconst styles = {\n\tcontainer: css`\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t`\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}