(this.webpackJsonpr3f_terracotta_layers=this.webpackJsonpr3f_terracotta_layers||[]).push([[0],{40:function(e,t,n){},48:function(e,t,n){"use strict";n.r(t);n(40);var o,c=n(9),a=n.n(c),r=n(32),i=n.n(r),s=n(33),g=n(38),v=n(10),l=n(12),f=n(11),x=function(e){var t,n=e.imagePath,o=e.linkPath,a=e.position,r=void 0===a?"bottom-right":a,i=e.size,s=void 0===i?[50,50]:i,g=Object(c.useState)(!1),v=Object(l.a)(g,2),x=v[0],u=v[1],m="/r3f-terracotta-layers"+n;switch(r){case"top-left":t=y.topLeft;break;case"top-right":t=y.topRight;break;case"bottom-left":t=y.bottomLeft;break;default:t=y.bottomRight}return Object(f.jsx)("a",{style:t,href:o,target:"_blank",rel:"noreferrer noopener",onMouseEnter:function(){return u(!0)},onMouseLeave:function(){return u(!1)},children:Object(f.jsx)("img",{style:x?d.img:y.img,src:m,alt:"",width:s[0],height:s[1]})})},u={position:"absolute",fontSize:"0"},y={topLeft:Object(v.a)(Object(v.a)({},u),{},{top:"10px",left:"10px"}),topRight:Object(v.a)(Object(v.a)({},u),{},{top:"10px",right:"10px"}),bottomLeft:Object(v.a)(Object(v.a)({},u),{},{bottom:"10px",left:"10px"}),bottomRight:Object(v.a)(Object(v.a)({},u),{},{bottom:"10px",right:"10px"}),img:{objectFit:"cover",opacity:"0.5",transform:"rotate(0deg)",transition:"all 0.3s"}},d={img:Object(v.a)(Object(v.a)({},y.img),{},{opacity:"1",transform:"rotate(360deg)"})},m=n(51),p=n(52),b=n(14),j=n(6),h=n(50),z=function(){return Object(f.jsxs)("group",{children:[Object(f.jsx)(P,{posZ:0,color:[.62,.49,.45]}),Object(f.jsx)(P,{posZ:.1,color:[.91,.8,.59]}),Object(f.jsx)(P,{posZ:.2,color:[.54,.76,.75]}),Object(f.jsx)(P,{posZ:.3,color:[.61,.5,.47]}),Object(f.jsx)(P,{posZ:.4,color:[.84,.56,.47]}),Object(f.jsx)(P,{posZ:.5,color:[.91,.85,.69]}),Object(f.jsx)(P,{posZ:.6,color:[.88,.64,.49]}),Object(f.jsx)(P,{posZ:.7,color:[.6,.49,.46]}),Object(f.jsx)(P,{posZ:.8,color:[.91,.91,.85]}),Object(f.jsx)(P,{posZ:.9,color:[.9,.69,.49]}),Object(f.jsx)(P,{posZ:1,color:[.84,.56,.47]})]})},P=function(e){var t=e.posZ,n={uniforms:{u_time:{value:0},u_color:{value:e.color},u_scale:{value:1-t},u_shadowScale:{value:1-(t+.1)}},vertexShader:_,fragmentShader:O};return Object(b.d)((function(){n.uniforms.u_time.value+=.01})),Object(f.jsx)(h.a,{args:[3,3],position:[0,0,t],children:Object(f.jsx)("shaderMaterial",{args:[n],transparent:!0,side:j.DoubleSide})})},_="\nvarying vec2 v_uv;\nvarying vec3 v_eye;\n\nvoid main() {\n  v_uv = uv;\n  v_eye = normalize(-cameraPosition);\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",O="\nuniform float u_time;\nuniform vec3 u_color;\nuniform float u_scale;\nuniform float u_shadowScale;\nvarying vec2 v_uv;\nvarying vec3 v_eye;\n\n".concat("\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise31(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n","\n\nfloat _smoothstep(float value, float offset) {\n  float start = -0.3;\n  float _offset = pow(offset, 0.8);\n  return 1.0 - smoothstep(start + _offset, start + 0.001 + _offset, value);\n}\n\nvoid main() {\n  vec3 seed = vec3(v_uv.x, v_uv.y, 1.0);\n  seed *= vec3(4.0, 4.0, 1.0);\n  seed += u_time * 0.2;\n  float noise = cnoise31(seed);\n  float alpha = _smoothstep(noise, u_scale);\n\n  vec3 color = u_color;\n  if(0.0 <= u_shadowScale) {\n    noise = cnoise31(seed + v_eye * vec3(0.3, 0.3, 0.0));\n    float shadow = _smoothstep(noise, u_shadowScale);\n    color -= shadow * 0.5;\n  }\n\n  gl_FragColor = vec4(color, alpha);\n}\n"),w=function(){return Object(f.jsxs)(b.a,{camera:{position:[0,0,5],fov:50,aspect:window.innerWidth/window.innerHeight,near:.1,far:2e3},dpr:window.devicePixelRatio,children:[Object(f.jsx)("color",{attach:"background",args:["#987452"]}),Object(f.jsx)(m.a,{attach:"orbitControls",enablePan:!1,minPolarAngle:.5*Math.PI-Math.PI/6,maxPolarAngle:.5*Math.PI+Math.PI/6,minAzimuthAngle:2*Math.PI-Math.PI/6,maxAzimuthAngle:2*Math.PI+Math.PI/6}),Object(f.jsx)(z,{}),Object(f.jsx)(p.a,{})]})},I=function(){return Object(f.jsxs)("div",{className:S.container,children:[Object(f.jsx)(w,{}),Object(f.jsx)(x,{imagePath:"/assets/icons/github.svg",linkPath:"https://github.com/nemutas/r3f-terracotta-layers"})]})},S={container:Object(g.a)(o||(o=Object(s.a)(["\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t"])))},M=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,53)).then((function(t){var n=t.getCLS,o=t.getFID,c=t.getFCP,a=t.getLCP,r=t.getTTFB;n(e),o(e),c(e),a(e),r(e)}))};i.a.render(Object(f.jsx)(a.a.StrictMode,{children:Object(f.jsx)(I,{})}),document.getElementById("root")),M()}},[[48,1,2]]]);
//# sourceMappingURL=main.8ed2e117.chunk.js.map